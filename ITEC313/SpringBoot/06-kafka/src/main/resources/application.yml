server:
  port: 8086

spring:
  application:
    name: kafka-demo
  
  # Database configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/kafka_demo
    username: kafka_user
    password: kafka_password
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: message-group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.acu.kafka.model
        spring.json.type.mapping: message:com.acu.kafka.model.Message
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.acu.kafka.model.Message
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
  
  mail:
    host: smtp.gmail.com
    port: 587
    username: ate.gs.2016.08@gmail.com
    password: au7bgGTS8mWrJux
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.acu.kafka: DEBUG
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
